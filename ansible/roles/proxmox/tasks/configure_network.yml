---
# Tasks for configuring network interfaces on Proxmox VMs

- name: Validate network configuration parameters
  assert:
    that:
      - proxmox_vm_vmid is defined
      - proxmox_vm_node is defined
    fail_msg: "VM ID and node must be specified for network configuration"
    success_msg: "Network configuration parameters validated"

- name: Stop VM if network changes require it
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_token_id: "{{ proxmox_api_token_id | default(omit) }}"
    api_token_secret: "{{ proxmox_api_token_secret | default(omit) }}"
    validate_certs: "{{ proxmox_validate_certs | default(true) }}"
    node: "{{ proxmox_vm_node }}"
    vmid: "{{ proxmox_vm_vmid }}"
    state: stopped
  when: proxmox_network_stop_vm | default(false)
  register: vm_stop_result

- name: Wait for VM to stop
  pause:
    seconds: 5
  when: vm_stop_result is changed

- name: Configure network interfaces
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_token_id: "{{ proxmox_api_token_id | default(omit) }}"
    api_token_secret: "{{ proxmox_api_token_secret | default(omit) }}"
    validate_certs: "{{ proxmox_validate_certs | default(true) }}"
    node: "{{ proxmox_vm_node }}"
    vmid: "{{ proxmox_vm_vmid }}"
    net: "{{ proxmox_vm_network_interfaces }}"
    update: true
  when: proxmox_vm_network_interfaces is defined
  register: network_config_result

- name: Configure VLAN interfaces
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_token_id: "{{ proxmox_api_token_id | default(omit) }}"
    api_token_secret: "{{ proxmox_api_token_secret | default(omit) }}"
    validate_certs: "{{ proxmox_validate_certs | default(true) }}"
    node: "{{ proxmox_vm_node }}"
    vmid: "{{ proxmox_vm_vmid }}"
    net: "{{ item.key }}: {{ item.value }}"
    update: true
  loop: "{{ proxmox_vm_vlan_interfaces | dict2items }}"
  when: proxmox_vm_vlan_interfaces is defined
  register: vlan_config_results

- name: Add additional network interface
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_token_id: "{{ proxmox_api_token_id | default(omit) }}"
    api_token_secret: "{{ proxmox_api_token_secret | default(omit) }}"
    validate_certs: "{{ proxmox_validate_certs | default(true) }}"
    node: "{{ proxmox_vm_node }}"
    vmid: "{{ proxmox_vm_vmid }}"
    net:
      "{{ proxmox_add_network_interface.name }}": "{{ proxmox_add_network_interface.config }}"
    update: true
  when: proxmox_add_network_interface is defined
  register: add_interface_result

- name: Start VM after network configuration
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_token_id: "{{ proxmox_api_token_id | default(omit) }}"
    api_token_secret: "{{ proxmox_api_token_secret | default(omit) }}"
    validate_certs: "{{ proxmox_validate_certs | default(true) }}"
    node: "{{ proxmox_vm_node }}"
    vmid: "{{ proxmox_vm_vmid }}"
    state: started
  when: 
    - vm_stop_result is changed
    - proxmox_network_start_after | default(true)

- name: Display network configuration results
  debug:
    msg: "Network configuration completed for VM {{ proxmox_vm_vmid }}"
  when: network_config_result is changed or vlan_config_results is changed or add_interface_result is changed

# Bridge configuration for Proxmox node (requires SSH access to node)
- name: Configure bridge on Proxmox node
  block:
    - name: Create bridge configuration file
      template:
        src: bridge_config.j2
        dest: "/tmp/bridge_{{ proxmox_bridge_name }}.conf"
      delegate_to: localhost
      when: proxmox_bridge_config is defined

    - name: Copy bridge configuration to Proxmox node
      copy:
        src: "/tmp/bridge_{{ proxmox_bridge_name }}.conf"
        dest: "/etc/network/interfaces.d/{{ proxmox_bridge_name }}.conf"
      delegate_to: "{{ proxmox_vm_node }}"
      when: proxmox_bridge_config is defined

    - name: Restart networking service
      systemd:
        name: networking
        state: restarted
      delegate_to: "{{ proxmox_vm_node }}"
      when: proxmox_bridge_config is defined and proxmox_bridge_restart_network | default(false)
  when: proxmox_configure_bridge | default(false)

# Example usage:
# - name: Configure network for VM
#   include_role:
#     name: proxmox
#   vars:
#     proxmox_operation: configure_network
#     proxmox_vm_vmid: 100
#     proxmox_vm_node: pve01
#     proxmox_vm_network_interfaces:
#       net0: "virtio,bridge=vmbr0,firewall=1"
#       net1: "virtio,bridge=vmbr1,firewall=1,tag=100"
#     proxmox_vm_vlan_interfaces:
#       net2: "virtio,bridge=vmbr1,tag=200"
#       net3: "virtio,bridge=vmbr1,tag=300"
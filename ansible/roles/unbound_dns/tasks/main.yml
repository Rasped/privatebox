---
# Main tasks for Unbound DNS role

- name: Install Unbound DNS package
  ansible.builtin.package:
    name: "{{ unbound_package_name }}"
    state: present
  notify: restart unbound

- name: Create Unbound directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: unbound
    group: unbound
    mode: '0755'
  loop:
    - /etc/unbound
    - /etc/unbound/conf.d
    - /var/lib/unbound

- name: Download root hints file
  ansible.builtin.get_url:
    url: "{{ unbound_root_hints_url }}"
    dest: "{{ unbound_root_hints_file }}"
    owner: unbound
    group: unbound
    mode: '0644'
    force: false
  notify: restart unbound

- name: Configure unbound-anchor for DNSSEC
  ansible.builtin.command:
    cmd: unbound-anchor -a "{{ unbound_auto_trust_anchor_file }}"
  args:
    creates: "{{ unbound_auto_trust_anchor_file }}"
  ignore_errors: true

- name: Set ownership on DNSSEC anchor file
  ansible.builtin.file:
    path: "{{ unbound_auto_trust_anchor_file }}"
    owner: unbound
    group: unbound
    mode: '0644'
  when: unbound_auto_trust_anchor_file is defined

- name: Deploy Unbound configuration
  ansible.builtin.template:
    src: unbound.conf.j2
    dest: /etc/unbound/unbound.conf
    owner: root
    group: root
    mode: '0644'
    validate: 'unbound-checkconf %s'
    backup: yes
  notify: restart unbound

- name: Check Unbound configuration syntax
  ansible.builtin.command:
    cmd: unbound-checkconf
  changed_when: false
  register: unbound_syntax_check

- name: Display configuration check result
  ansible.builtin.debug:
    var: unbound_syntax_check.stdout_lines
  when: unbound_syntax_check.stdout_lines is defined

- name: Enable and start Unbound service
  ansible.builtin.systemd:
    name: "{{ unbound_service_name }}"
    state: "{{ unbound_service_state }}"
    enabled: "{{ unbound_service_enabled }}"
    daemon_reload: yes

- name: Wait for Unbound to be ready
  ansible.builtin.wait_for:
    port: "{{ unbound_port }}"
    host: "{{ unbound_interfaces[0] }}"
    delay: 2
    timeout: 30

- name: Test DNS resolution
  ansible.builtin.command:
    cmd: "dig @{{ unbound_interfaces[0] }} -p {{ unbound_port }} example.com +short"
  register: dns_test
  changed_when: false
  failed_when: false

- name: Display DNS test result
  ansible.builtin.debug:
    msg: "DNS resolution test: {{ 'SUCCESS' if dns_test.rc == 0 else 'FAILED' }}"
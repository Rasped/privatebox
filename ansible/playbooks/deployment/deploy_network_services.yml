---
# Deploy Network Services Playbook
# Deploys OPNSense and DNS services (AdGuard Home, Unbound)

- name: Deploy Network Services
  hosts: network_services
  gather_facts: true
  become: true
  tags:
    - network
    - deployment
  
  pre_tasks:
    - name: Check network service dependencies
      ansible.builtin.assert:
        that:
          - base_services_deployed | default(false)
        fail_msg: "Base services must be deployed first"
      tags:
        - dependencies

    - name: Validate network configuration
      ansible.builtin.include_tasks: tasks/validate_network_config.yml
      tags:
        - validation
        - network-config

  tasks:
    - name: Deploy OPNSense firewall
      ansible.builtin.include_role:
        name: opnsense
      vars:
        opnsense_initial_setup: true
        opnsense_configure_interfaces: true
        opnsense_configure_dhcp: true
      tags:
        - opnsense
        - firewall
      when: 
        - inventory_hostname in groups['opnsense_hosts']
        - opnsense_enabled | default(true)

    - name: Deploy Unbound DNS resolver
      ansible.builtin.include_role:
        name: unbound_dns
      vars:
        unbound_configure_root_hints: true
        unbound_enable_dnssec: true
        unbound_configure_cache: true
      tags:
        - unbound
        - dns
      when:
        - inventory_hostname in groups['dns_hosts']
        - unbound_enabled | default(true)

    - name: Deploy AdGuard Home
      ansible.builtin.include_role:
        name: adguard_home
      vars:
        adguard_configure_upstream: true
        adguard_enable_filtering: true
        adguard_configure_blocklists: true
      tags:
        - adguard
        - dns-filtering
      when:
        - inventory_hostname in groups['dns_hosts']
        - adguard_enabled | default(true)

    - name: Configure DNS integration
      ansible.builtin.include_tasks: tasks/configure_dns_integration.yml
      tags:
        - dns-integration
        - configuration
      when: 
        - unbound_enabled | default(true)
        - adguard_enabled | default(true)

  post_tasks:
    - name: Test DNS resolution
      ansible.builtin.command: dig @localhost google.com
      register: dns_test
      changed_when: false
      failed_when: dns_test.rc != 0
      tags:
        - testing
        - dns-test

    - name: Verify firewall rules
      ansible.builtin.include_tasks: tasks/verify_firewall_rules.yml
      tags:
        - validation
        - firewall-test
      when: inventory_hostname in groups['opnsense_hosts']

    - name: Generate network services report
      ansible.builtin.template:
        src: templates/network_services_report.j2
        dest: /etc/privatebox/network_services_report.txt
      tags:
        - reporting

    - name: Create deployment marker
      ansible.builtin.file:
        path: /etc/privatebox/.network_deployed
        state: touch
      tags:
        - marker

  handlers:
    - name: restart unbound
      ansible.builtin.systemd:
        name: unbound
        state: restarted
      become: true

    - name: restart adguard
      ansible.builtin.systemd:
        name: AdGuardHome
        state: restarted
      become: true

    - name: reload opnsense
      ansible.builtin.command: configctl service reload all
      when: inventory_hostname in groups['opnsense_hosts']
      become: true
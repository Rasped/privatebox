---
- name: "FreeBSD: Create Custom Installer ISO with Auto-config"
  hosts: proxmox
  become: true
  gather_facts: true
  
  vars:
    # ISO configuration
    vmid: 9998
    freebsd_version: "14.3"
    iso_dir: "/var/lib/vz/template/iso"
    base_iso: "{{ iso_dir }}/FreeBSD-{{ freebsd_version }}-RELEASE-amd64-disc1.iso"
    # Use a fixed name for the custom ISO (not unique per vmid)
    auto_iso: "{{ iso_dir }}/FreeBSD-{{ freebsd_version }}-auto.iso"
    temp_dir: "/tmp/freebsd-config-{{ vmid }}"
    
    # FreeBSD configuration - generate password hash locally
    freebsd_password: "{{ SERVICES_PASSWORD | default('privatebox123') }}"
    freebsd_hostname: "{{ hostname | default('freebsd-privatebox') }}"
    freebsd_username: "{{ username | default('freebsd') }}"
    freebsd_fullname: "{{ fullname | default('FreeBSD PrivateBox User') }}"
    freebsd_shell: "{{ shell | default('/bin/sh') }}"
    freebsd_timezone: "{{ timezone | default('UTC') }}"
    freebsd_swap_size: "{{ swap_size | default('2G') }}"
    freebsd_interface: "{{ interface | default('vtnet0') }}"
    
    # Network configuration
    vm_static_ip: "{{ static_ip | default('192.168.1.55') }}"
    vm_netmask: "{{ netmask | default('255.255.255.0') }}"
    vm_gateway: "{{ gateway | default('192.168.1.1') }}"
    vm_dns1: "{{ dns1 | default('8.8.8.8') }}"
    vm_dns2: "{{ dns2 | default('8.8.4.4') }}"
    
    # Packages to install
    freebsd_packages: "{{ packages | default(['bash', 'nano', 'curl', 'wget', 'git', 'rsync', 'htop']) }}"
    
    # Security settings
    freebsd_security_hardening: "{{ security_hardening | default(true) }}"
    freebsd_ssh_security: "{{ ssh_security | default(true) }}"
    freebsd_enable_firewall: "{{ enable_firewall | default(true) }}"
    freebsd_firewall_type: "{{ firewall_type | default('simple') }}"
    freebsd_firewall_services: "{{ firewall_services | default('ssh') }}"
    freebsd_firewall_allowed_ips: "{{ firewall_allowed_ips | default('192.168.1.0/24') }}"
    
  tasks:
    - name: Generate password hash
      shell: |
        python3 -c "import crypt, random, string; salt = ''.join(random.choices(string.ascii_letters + string.digits, k=8)); print(crypt.crypt('{{ freebsd_password }}', '$1$' + salt + '$'))"
      register: password_hash_result
      changed_when: false
      no_log: true
      
    - name: Install xorriso for ISO creation
      apt:
        name: xorriso
        state: present
        update_cache: yes
        
    - name: Create temporary directory for config files
      file:
        path: "{{ temp_dir }}"
        state: directory
        mode: '0755'
        
    - name: Create installerconfig file
      template:
        src: ../../templates/freebsd/installerconfig.j2
        dest: "{{ temp_dir }}/installerconfig"
        mode: '0755'
      vars:
        password_hash: "{{ password_hash_result.stdout }}"
        
    - name: Create postinstall script
      template:
        src: ../../templates/freebsd/postinstall.sh.j2
        dest: "{{ temp_dir }}/postinstall"
        mode: '0755'
        
    - name: Remove old custom ISO if present
      file:
        path: "{{ auto_iso }}"
        state: absent
        
    - name: Build auto ISO (preserve boot data)
      command: >
        xorriso -indev "{{ base_iso }}" 
                -outdev "{{ auto_iso }}"
                -map "{{ temp_dir }}/installerconfig" /etc/installerconfig
                -map "{{ temp_dir }}/postinstall" /etc/postinstall
                -boot_image any keep
      args:
        creates: "{{ auto_iso }}"
        
    - name: Clean up temporary directory
      file:
        path: "{{ temp_dir }}"
        state: absent
        
    - name: Report ISO creation success
      debug:
        msg:
          - "FreeBSD custom installer ISO created successfully"
          - "ISO Path: {{ auto_iso }}"
          - "ISO Name: FreeBSD-{{ freebsd_version }}-auto.iso"
          - "Config embedded at: /etc/installerconfig"
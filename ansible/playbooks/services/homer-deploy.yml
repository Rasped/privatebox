---
# Homer Dashboard Deployment
# Deploys Homer dashboard on Management VM with dynamic service registry
# Required variables from Semaphore:
#   - SERVICES_PASSWORD (for display purposes only)

- name: "Homer 1: Deploy Dashboard Service"
  hosts: container-host
  gather_facts: yes
  vars:
    # Service configuration
    homer_port: 8081
    homer_version: "latest"
    service_name: "homer"
    config_dir: "/opt/homer"

    # Container image
    homer_image: "b4bz/homer"

    # Quadlet configuration
    use_system_quadlet: true
    quadlet_system_path: "/etc/containers/systemd"

    # Get password from Semaphore
    services_password: "{{ lookup('env', 'SERVICES_PASSWORD') | default('NOT_SET', true) }}"

  tasks:
    - name: Display deployment header
      debug:
        msg:
          - "=========================================="
          - "     HOMER DASHBOARD DEPLOYMENT"
          - "=========================================="
          - "Target: Management VM (container-host)"
          - "Port: {{ homer_port }}"
          - "Config: {{ config_dir }}/config.yml"

    - name: Validate environment
      block:
        - name: Display target host
          debug:
            msg: "✓ Running on host: {{ ansible_hostname }}"

        - name: Check for Podman
          command: which podman
          changed_when: false
          failed_when: false
          register: podman_check

        - name: Validate Podman is installed
          assert:
            that:
              - podman_check.rc == 0
            fail_msg: "Podman is not installed"
            success_msg: "✓ Podman is available"

    - name: Create required directories
      block:
        - name: Create Homer config directory
          file:
            path: "{{ config_dir }}"
            state: directory
            mode: '0755'
            owner: root
            group: root

        - name: Create Quadlet directory
          file:
            path: "/etc/containers/systemd"
            state: directory
            mode: '0755'
            owner: root
            group: root

    - name: Deploy Homer configuration
      copy:
        src: ../../templates/homer/config.yml
        dest: "{{ config_dir }}/config.yml"
        owner: root
        group: root
        mode: '0644'

    - name: Deploy Homer icons
      copy:
        src: ../../templates/homer/tools/
        dest: "{{ config_dir }}/tools/"
        owner: root
        group: root
        mode: '0644'
        directory_mode: '0755'

    - name: Pull Homer container image
      command: podman pull docker.io/{{ homer_image }}:{{ homer_version }}
      register: pull_result
      changed_when: "'Copying blob' in pull_result.stdout"

    - name: Deploy Quadlet unit file
      template:
        src: ../../files/quadlet/homer.container.j2
        dest: "{{ quadlet_system_path }}/{{ service_name }}.container"
        owner: root
        group: root
        mode: '0644'
      register: quadlet_deployed

    - name: Reload systemd daemon
      systemd:
        daemon_reload: true
      when: quadlet_deployed.changed

    - name: Enable Homer service
      systemd:
        name: "{{ service_name }}.service"
        enabled: yes
      register: service_enabled

    - name: Start Homer service
      systemd:
        name: "{{ service_name }}.service"
        state: started
      register: service_started

    - name: Wait for Homer to be accessible
      wait_for:
        host: 10.10.20.10
        port: "{{ homer_port }}"
        delay: 5
        timeout: 30

    - name: Verify Homer is responding
      uri:
        url: "http://10.10.20.10:{{ homer_port }}"
        method: GET
        status_code: 200
        timeout: 10
      register: homer_check
      retries: 3
      delay: 5

    - name: Get service status
      systemd:
        name: "{{ service_name }}.service"
      register: service_status


    - name: Display deployment summary
      vars:
        deployment_info:
          status: "{{ 'SUCCESS' if homer_check.status == 200 else 'FAILED' }}"
          url: "http://10.10.20.10:{{ homer_port }}"
          service: "{{ service_name }}.service"
          config: "{{ config_dir }}/config.yml"
      debug:
        msg:
          - ""
          - "=========================================="
          - "     DEPLOYMENT {{ deployment_info.status }}"
          - "=========================================="
          - ""
          - "Homer Dashboard is now accessible at:"
          - "  {{ deployment_info.url }}"
          - ""
          - "Configuration:"
          - "  Config: {{ deployment_info.config }}"
          - ""
          - "To update services:"
          - "  1. Edit ansible/templates/homer/config.yml in repo"
          - "  2. Re-run this deployment playbook"
          - ""
          - "Service Management:"
          - "  systemctl status {{ deployment_info.service }}"
          - "  systemctl restart {{ deployment_info.service }}"
          - ""
          - "Container Logs:"
          - "  journalctl -u {{ deployment_info.service }} -f"
          - ""
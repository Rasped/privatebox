---
- name: Install Required Ansible Collections
  hosts: localhost
  gather_facts: false
  
  vars:
    required_collections:
      - name: community.general
        version: ">=7.0.0"
      - name: ansibleguy.opnsense
        version: ">=0.1.0"
        
  tasks:
    - name: Create requirements file
      copy:
        content: |
          ---
          collections:
          {% for collection in required_collections %}
            - name: {{ collection.name }}
              version: "{{ collection.version }}"
          {% endfor %}
        dest: /tmp/ansible-requirements.yml
        mode: '0644'
        
    - name: Check installed collections
      command: ansible-galaxy collection list
      register: installed_collections
      changed_when: false
      
    - name: Parse installed collections
      set_fact:
        installed_collection_names: >-
          {{
            installed_collections.stdout_lines |
            select('match', '^[a-z]+\.[a-z]+') |
            map('split') |
            map('first') |
            list
          }}
          
    - name: Determine collections to install
      set_fact:
        collections_to_install: >-
          {{
            required_collections |
            rejectattr('name', 'in', installed_collection_names) |
            list
          }}
          
    - name: Display installation plan
      debug:
        msg:
          - "Already installed: {{ installed_collection_names | join(', ') }}"
          - "Will install: {{ collections_to_install | map(attribute='name') | join(', ') }}"
          
    - name: Install missing collections
      command: ansible-galaxy collection install -r /tmp/ansible-requirements.yml
      when: collections_to_install | length > 0
      
    - name: Verify ansibleguy.opnsense dependencies
      pip:
        name:
          - httpx
          - netaddr
        state: present
      become: true
      
    - name: Verify all collections installed
      command: ansible-galaxy collection list
      register: final_collections
      changed_when: false
      
    - name: Confirm installation
      assert:
        that:
          - item in final_collections.stdout
        fail_msg: "Collection {{ item }} failed to install"
      loop: "{{ required_collections | map(attribute='name') | list }}"
      
    - name: Clean up requirements file
      file:
        path: /tmp/ansible-requirements.yml
        state: absent
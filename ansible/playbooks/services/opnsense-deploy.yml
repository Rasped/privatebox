---
# Deploy OPNsense VM from Template Image
# This playbook downloads a template image and creates a new VM
#
# Usage:
#   ansible-playbook -i inventory.yml deploy-opnsense-from-template.yml
#
# Variables:
#   template_url: URL to download the template from
#   vm_id: ID for the new VM (default: 100)
#   vm_name: Name for the new VM (default: opnsense-prod)

- name: "OPNsense: Deploy"
  hosts: proxmox
  become: false
  gather_facts: true

  vars:
    # Template download URL - CHANGE THIS to your file server
    template_url: "http://192.168.1.179/templates/opnsense-template.qcow2"
    
    # VM Configuration
    vm_id: 100
    vm_name: "opnsense-prod"
    vm_memory: 4096
    vm_cores: 2
    vm_storage: "local-lvm"
    
    # Network Configuration
    vm_net0_bridge: "vmbr0"  # WAN
    vm_net1_bridge: "vmbr1"  # LAN
    
    # Temporary download location
    temp_dir: "/tmp/opnsense-deploy"
    
  tasks:
    - name: Check if VM already exists
      command: qm status {{ vm_id }}
      register: vm_exists
      failed_when: false
      changed_when: false

    - name: Fail if VM already exists
      fail:
        msg: "VM {{ vm_id }} already exists. Remove it first or use different ID."
      when: vm_exists.rc == 0

    - name: Create temporary directory
      file:
        path: "{{ temp_dir }}"
        state: directory
        mode: '0755'

    - name: Download template image
      get_url:
        url: "{{ template_url }}"
        dest: "{{ temp_dir }}/opnsense-template.qcow2"
        mode: '0644'
        timeout: 600
      register: download_result

    - name: Create VM
      command: |
        qm create {{ vm_id }} \
          --name {{ vm_name }} \
          --memory {{ vm_memory }} \
          --cores {{ vm_cores }} \
          --cpu host \
          --ostype l26 \
          --onboot 1

    - name: Configure network interfaces
      command: |
        qm set {{ vm_id }} \
          --net0 virtio,bridge={{ vm_net0_bridge }} \
          --net1 virtio,bridge={{ vm_net1_bridge }}

    - name: Import disk image
      command: |
        qm importdisk {{ vm_id }} {{ temp_dir }}/opnsense-template.qcow2 {{ vm_storage }}
      register: import_result

    - name: Debug import output
      debug:
        var: import_result.stdout
      when: import_result.rc == 0

    - name: Attach imported disk as boot device
      command: |
        qm set {{ vm_id }} \
          --scsi0 {{ vm_storage }}:vm-{{ vm_id }}-disk-0 \
          --scsihw virtio-scsi-pci \
          --boot order=scsi0

    - name: Clean up temporary files
      file:
        path: "{{ temp_dir }}"
        state: absent
      ignore_errors: yes

    - name: Display deployment summary
      debug:
        msg:
          - "=================================="
          - "OPNsense VM Deployed Successfully!"
          - "=================================="
          - ""
          - "VM ID: {{ vm_id }}"
          - "VM Name: {{ vm_name }}"
          - "Memory: {{ vm_memory }}MB"
          - "Cores: {{ vm_cores }}"
          - ""
          - "Network Configuration:"
          - "  WAN: {{ vm_net0_bridge }}"
          - "  LAN: {{ vm_net1_bridge }}"
          - ""
          - "Next Steps:"
          - "1. Start VM: qm start {{ vm_id }}"
          - "2. Access console to configure network"
          - "3. Enable SSH for remote management"
          - "=================================="

    - name: Start VM
      command: qm start {{ vm_id }}
      register: start_result

    - name: Wait for VM to boot
      pause:
        seconds: 30
        prompt: "Waiting for OPNsense to boot..."

    - name: Display final deployment summary
      debug:
        msg:
          - "=================================="
          - "OPNsense VM Deployed and Started!"
          - "=================================="
          - ""
          - "VM ID: {{ vm_id }}"
          - "VM Name: {{ vm_name }}"
          - "Status: Running"
          - ""
          - "Network Configuration:"
          - "  WAN: {{ vm_net0_bridge }}"
          - "  LAN: {{ vm_net1_bridge }}"
          - ""
          - "Access:"
          - "  Console: qm terminal {{ vm_id }}"
          - "  Default login: root/opnsense"
          - ""
          - "Note: Check router DHCP for WAN IP"
          - "=================================="
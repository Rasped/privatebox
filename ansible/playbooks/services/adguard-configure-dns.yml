---
- name: "AdGuard: Configure as System DNS"
  hosts: container-host
  become: true
  gather_facts: true
  
  vars:
    service_name: "AdGuard DNS Activation"
    service_description: "Configure system to use AdGuard Home for DNS resolution"
    
  vars_prompt:
    - name: confirm_activation
      prompt: "This will configure the system to use AdGuard for DNS. Continue?"
      default: "yes"
      private: false
      
  tasks:
    - name: Pre-activation checks
      when: confirm_activation | bool
      block:
        - name: Verify AdGuard service is running
          systemd:
            name: adguard-container.service
            state: started
          check_mode: true
          register: adguard_status
          failed_when: adguard_status.changed
          
        - name: Get AdGuard container status
          command: podman ps --filter name=adguard-home --format json
          register: container_status
          changed_when: false
          
        - name: Verify container is running
          assert:
            that:
              - container_status.stdout | from_json | length > 0
              - (container_status.stdout | from_json | first).State == "running"
            fail_msg: "AdGuard container is not running"
            
        - name: Test AdGuard DNS resolution
          command: |
            dig @{{ ansible_default_ipv4.address }} 
            +short +time=2 google.com
          register: dns_test
          changed_when: false
          failed_when: dns_test.rc != 0 or dns_test.stdout == ""
          
        - name: Display DNS test result
          debug:
            msg: "AdGuard DNS test successful: {{ dns_test.stdout_lines[0] }}"
            
    - name: Handle systemd-resolved
      when: confirm_activation | bool
      block:
        - name: Check if systemd-resolved is active
          command: systemctl is-active systemd-resolved
          register: resolved_status
          changed_when: false
          failed_when: false
          
        - name: Display systemd-resolved status
          debug:
            msg: "systemd-resolved is {{ resolved_status.stdout }}"
            
        - name: Stop and disable systemd-resolved
          when: resolved_status.stdout == "active"
          systemd:
            name: systemd-resolved
            state: stopped
            enabled: no
            daemon_reload: yes
            
        - name: Remove resolv.conf if it's a symlink
          when: resolved_status.stdout == "active"
          file:
            path: /etc/resolv.conf
            state: absent
          
    - name: Configure system DNS
      when: confirm_activation | bool
      block:
        - name: Create new resolv.conf
          copy:
            content: |
              # Managed by PrivateBox - Using AdGuard Home for DNS
              # Primary DNS: AdGuard Home on {{ ansible_default_ipv4.address }}
              nameserver {{ ansible_default_ipv4.address }}
              
              # Fallback DNS servers (in case AdGuard is down)
              nameserver 1.1.1.1
              nameserver 9.9.9.9
              
              # Search domain
              search {{ ansible_domain | default('local') }}
            dest: /etc/resolv.conf
            owner: root
            group: root
            mode: '0644'
            backup: yes
            
        - name: Make resolv.conf immutable
          file:
            path: /etc/resolv.conf
            attributes: +i
          ignore_errors: yes
          
    - name: Verify DNS functionality
      when: confirm_activation | bool
      block:
        - name: Test DNS resolution via system
          command: nslookup github.com
          register: system_dns_test
          changed_when: false
          retries: 3
          delay: 2
          
        - name: Test DNS with dig
          command: dig +short github.com
          register: dig_test
          changed_when: false
          
        - name: Display DNS status
          debug:
            msg:
              - "System DNS configured successfully!"
              - "GitHub resolves to: {{ dig_test.stdout_lines[0] | default('N/A') }}"
              - "AdGuard is now handling DNS queries"
              
    - name: Create deactivation script
      when: confirm_activation | bool
      copy:
        content: |
          #!/bin/bash
          # Script to revert DNS changes made by AdGuard activation
          
          echo "Reverting DNS configuration..."
          
          # Remove immutable flag
          chattr -i /etc/resolv.conf 2>/dev/null || true
          
          # Restore original DNS
          cat > /etc/resolv.conf << EOF
          # Temporary DNS configuration
          nameserver 1.1.1.1
          nameserver 8.8.8.8
          EOF
          
          # Re-enable systemd-resolved if it was previously active
          if systemctl list-unit-files | grep -q systemd-resolved; then
              systemctl enable systemd-resolved
              systemctl start systemd-resolved
              rm -f /etc/resolv.conf
              ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
          fi
          
          echo "DNS configuration reverted"
        dest: /opt/privatebox/scripts/deactivate-adguard-dns.sh
        mode: '0755'
        
    - name: Summary
      when: confirm_activation | bool
      debug:
        msg:
          - "=========================================="
          - "AdGuard DNS Activation Complete!"
          - "=========================================="
          - ""
          - "System is now using AdGuard for DNS resolution"
          - "AdGuard IP: {{ ansible_default_ipv4.address }}:53"
          - ""
          - "To deactivate: sudo /opt/privatebox/scripts/deactivate-adguard-dns.sh"
          - ""
          - "Note: If AdGuard stops, fallback DNS servers will be used"
          - "=========================================="
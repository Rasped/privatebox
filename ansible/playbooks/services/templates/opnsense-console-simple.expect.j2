#!/usr/bin/expect -f
#
# Simplified OPNsense Console Configuration Script
# Uses send_tty to bypass serial console issues
#

set timeout 120
set vm_id {{ vm_id }}
set lan_ip "{{ lan_ip }}"
set lan_netmask "{{ lan_netmask }}"
set lan_gateway "{{ lan_gateway }}"
set ssh_key "{{ ssh_public_key }}"

# Enable logging
log_file /tmp/opnsense-console-config.log

send_user "Starting OPNsense console configuration for VM $vm_id\n"

# Use SSH to send keystrokes to VM console
spawn ssh root@{{ proxmox_host }} "qm sendkey $vm_id"

send_user "Waiting 30 seconds for boot to complete...\n"
sleep 30

# Send Enter to get to login prompt
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# Type root username
send_user "Sending username...\n"
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id r o o t"
sleep 1
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# Type default password
send_user "Sending password...\n"
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id o p n s e n s e"
sleep 1
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 5

# Wait for menu and select option 2 (Set interface IP)
send_user "Selecting interface configuration...\n"
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id 2"
sleep 1
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# Select interface 1 (LAN)
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id 1"
sleep 1
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# No DHCP
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id n"
sleep 1
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# Enter IP address
send_user "Setting IP address to $lan_ip...\n"
foreach char [split $lan_ip ""] {
    if {$char == "."} {
        exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id dot"
    } else {
        exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id $char"
    }
    sleep 0.1
}
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# Enter netmask
send_user "Setting netmask to $lan_netmask...\n"
foreach char [split $lan_netmask ""] {
    exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id $char"
    sleep 0.1
}
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# Enter gateway
send_user "Setting gateway to $lan_gateway...\n"
foreach char [split $lan_gateway ""] {
    if {$char == "."} {
        exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id dot"
    } else {
        exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id $char"
    }
    sleep 0.1
}
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# Skip IPv6
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id n"
sleep 1
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# No DHCP server
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id n"
sleep 1
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# Keep HTTPS
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id n"
sleep 1
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 2

# Press enter to continue
exec ssh root@{{ proxmox_host }} "qm sendkey $vm_id ret"
sleep 5

send_user "\n===========================================\n"
send_user "Basic network configuration complete!\n"
send_user "IP Address: $lan_ip\n"
send_user "Gateway: $lan_gateway\n"
send_user "\n"
send_user "Note: SSH configuration requires web UI access\n"
send_user "Please complete setup at https://$lan_ip\n"
send_user "===========================================\n"

exit 0
---
# Homer Dashboard Configuration Update
# Regenerates Homer config from services registry
# This playbook is called when new services are added

- name: "Homer Update: Refresh Dashboard Configuration"
  hosts: container-host
  gather_facts: yes
  vars:
    config_dir: "/opt/homer"
    registry_file: "/opt/privatebox/services.yml"

  tasks:
    - name: Check if services registry exists
      stat:
        path: "{{ registry_file }}"
      register: registry_check
      failed_when: not registry_check.stat.exists

    - name: Load services from registry
      slurp:
        src: "{{ registry_file }}"
      register: services_content

    - name: Parse services registry
      set_fact:
        services_data: "{{ services_content.content | b64decode | from_yaml }}"

    - name: Generate updated Homer configuration
      copy:
        dest: "{{ config_dir }}/config.yml"
        content: |
          ---
          # Homer Dashboard Configuration
          # Generated from {{ registry_file }}
          # Last updated: {{ ansible_date_time.iso8601 }}

          title: "PrivateBox Dashboard"
          subtitle: "Home Network Services"
          logo: "logo.png"

          header: true
          footer: false

          theme: default
          colors:
            light:
              highlight-primary: "#3367d6"
              highlight-secondary: "#4285f4"
              highlight-hover: "#5a95f5"
              background: "#f5f5f5"
              card-background: "#ffffff"
              text: "#363636"
              text-header: "#ffffff"
              text-title: "#303030"
              text-subtitle: "#424242"
              card-shadow: rgba(0, 0, 0, 0.1)
              link-hover: "#363636"
            dark:
              highlight-primary: "#3367d6"
              highlight-secondary: "#4285f4"
              highlight-hover: "#5a95f5"
              background: "#131313"
              card-background: "#2b2b2b"
              text: "#eaeaea"
              text-header: "#ffffff"
              text-title: "#fafafa"
              text-subtitle: "#f5f5f5"
              card-shadow: rgba(0, 0, 0, 0.4)
              link-hover: "#ffdd57"

          message:
            style: "is-info"
            title: "Welcome!"
            content: "PrivateBox Network Services - All services protected by authentication"

          links: []

          services:
            - name: "Network Services"
              icon: "fas fa-network-wired"
              items:
          {% for service in services_data.services %}
          {% if service.tag == 'network' %}
                - name: "{{ service.name }}"
                  logo: "{{ service.logo | default('assets/tools/sample.png') }}"
                  subtitle: "{{ service.subtitle | default('') }}"
                  tag: "{{ service.tag | default('app') }}"
                  url: "{{ service.url }}"
                  target: "{{ service.target | default('_blank') }}"
          {% endif %}
          {% endfor %}

            - name: "Management"
              icon: "fas fa-tools"
              items:
          {% for service in services_data.services %}
          {% if service.tag == 'management' %}
                - name: "{{ service.name }}"
                  logo: "{{ service.logo | default('assets/tools/sample.png') }}"
                  subtitle: "{{ service.subtitle | default('') }}"
                  tag: "{{ service.tag | default('app') }}"
                  url: "{{ service.url }}"
                  target: "{{ service.target | default('_blank') }}"
          {% endif %}
          {% endfor %}

            - name: "Security"
              icon: "fas fa-shield-alt"
              items:
          {% for service in services_data.services %}
          {% if service.tag == 'security' %}
                - name: "{{ service.name }}"
                  logo: "{{ service.logo | default('assets/tools/sample.png') }}"
                  subtitle: "{{ service.subtitle | default('') }}"
                  tag: "{{ service.tag | default('app') }}"
                  url: "{{ service.url }}"
                  target: "{{ service.target | default('_blank') }}"
          {% endif %}
          {% endfor %}

            - name: "Automation"
              icon: "fas fa-robot"
              items:
          {% for service in services_data.services %}
          {% if service.tag == 'automation' %}
                - name: "{{ service.name }}"
                  logo: "{{ service.logo | default('assets/tools/sample.png') }}"
                  subtitle: "{{ service.subtitle | default('') }}"
                  tag: "{{ service.tag | default('app') }}"
                  url: "{{ service.url }}"
                  target: "{{ service.target | default('_blank') }}"
          {% endif %}
          {% endfor %}
        mode: '0644'
      register: config_updated

    - name: Restart Homer if config changed
      systemd:
        name: homer.service
        state: restarted
      when: config_updated.changed

    - name: Display update status
      debug:
        msg:
          - "Homer dashboard configuration {{ 'updated' if config_updated.changed else 'unchanged' }}"
          - "Services in registry: {{ services_data.services | length }}"
---
- name: "OPNsense: Assign Interfaces"
  hosts: container-host
  become: true
  gather_facts: true
  
  vars:
    service_name: "OPNsense Interface Assignment"
    service_description: "Dynamically assign network interfaces based on discovered configuration"
    service_tag: "opnsense-interfaces"
    
    # Default interface mappings
    default_wan_interface: "vtnet0"
    default_lan_interface: "vtnet1"      opnsense_host:
        semaphore_type: "string"
        semaphore_required: true
        semaphore_description: "OPNsense IP address or hostname"
  
  tasks:
    - name: Load discovery data
      include_vars:
        file: "/opt/privatebox/ansible/host_vars/proxmox/discovered.yml"
        name: discovery
      failed_when: false
      
    - name: Pre-flight checks
      block:
        - name: Check API credentials exist
          stat:
            path: /etc/privatebox-opnsense-api-key
          register: api_key_file
          
        - name: Verify API credentials
          assert:
            that:
              - api_key_file.stat.exists
            fail_msg: "API credentials not found. Please run opnsense-enable-api.yml first"
            
        - name: Load API credentials
          block:
            - name: Read API key
              slurp:
                src: /etc/privatebox-opnsense-api-key
              register: api_key_content
              
            - name: Read API secret
              slurp:
                src: /etc/privatebox-opnsense-api-secret
              register: api_secret_content
              
            - name: Set API credentials
              set_fact:
                api_key: "{{ api_key_content.content | b64decode | trim }}"
                api_secret: "{{ api_secret_content.content | b64decode | trim }}"
                
    - name: Discover OPNsense interfaces
      block:
        - name: Get interface list from OPNsense
          uri:
            url: "https://{{ opnsense_host }}/api/diagnostics/interface/getInterfaceNames"
            method: GET
            user: "{{ api_key }}"
            password: "{{ api_secret }}"
            force_basic_auth: true
            validate_certs: false
            status_code: 200
          register: interface_list
          
        - name: Get detailed interface information
          uri:
            url: "https://{{ opnsense_host }}/api/diagnostics/interface/getInterfaceConfig"
            method: GET
            user: "{{ api_key }}"
            password: "{{ api_secret }}"
            force_basic_auth: true
            validate_certs: false
            status_code: 200
          register: interface_config
          
        - name: Display discovered interfaces
          debug:
            msg:
              - "Available interfaces:"
              - "{{ interface_list.json }}"
              
    - name: Determine interface assignments
      block:
        - name: Parse Proxmox network configuration
          when: discovery is defined and discovery.proxmox_networks is defined
          set_fact:
            proxmox_bridges: "{{ discovery.proxmox_networks.bridges | default([]) }}"
            vm_networks: "{{ discovery.proxmox_networks.vm_networks | default({}) }}"
            
        - name: Identify WAN interface
          set_fact:
            wan_interface: >-
              {%- if interface_list.json is defined -%}
                {%- for iface, desc in interface_list.json.items() -%}
                  {%- if 'wan' in desc.lower() or loop.first -%}
                    {{ iface }}
                  {%- endif -%}
                {%- endfor -%}
              {%- else -%}
                {{ default_wan_interface }}
              {%- endif -%}
              
        - name: Identify LAN interface
          set_fact:
            lan_interface: >-
              {%- if interface_list.json is defined -%}
                {%- for iface, desc in interface_list.json.items() -%}
                  {%- if 'lan' in desc.lower() or (not 'wan' in desc.lower() and loop.index == 2) -%}
                    {{ iface }}
                  {%- endif -%}
                {%- endfor -%}
              {%- else -%}
                {{ default_lan_interface }}
              {%- endif -%}
              
        - name: Display interface assignment plan
          debug:
            msg:
              - "Interface assignment plan:"
              - "WAN: {{ wan_interface }}"
              - "LAN: {{ lan_interface }}"
              
    - name: Configure interfaces via API
      block:
        - name: Get current interface assignments
          uri:
            url: "https://{{ opnsense_host }}/api/interfaces/overview/get"
            method: GET
            user: "{{ api_key }}"
            password: "{{ api_secret }}"
            force_basic_auth: true
            validate_certs: false
            status_code: 200
          register: current_interfaces
          
        - name: Configure WAN interface
          uri:
            url: "https://{{ opnsense_host }}/api/interfaces/settings/set"
            method: POST
            user: "{{ api_key }}"
            password: "{{ api_secret }}"
            force_basic_auth: true
            validate_certs: false
            body_format: json
            body:
              interface:
                wan:
                  if: "{{ wan_interface }}"
                  enable: "1"
                  descr: "WAN"
                  ipaddr: "dhcp"
                  blockpriv: "1"
                  blockbogons: "1"
            status_code: 200
          register: wan_config_result
          when: wan_interface != (current_interfaces.json.wan.if | default(''))
          
        - name: Configure LAN interface
          uri:
            url: "https://{{ opnsense_host }}/api/interfaces/settings/set"
            method: POST
            user: "{{ api_key }}"
            password: "{{ api_secret }}"
            force_basic_auth: true
            validate_certs: false
            body_format: json
            body:
              interface:
                lan:
                  if: "{{ lan_interface }}"
                  enable: "1"
                  descr: "LAN"
                  ipaddr: "{{ lan_ip | default('10.0.0.1') }}"
                  subnet: "{{ lan_subnet | default('24') }}"
            status_code: 200
          register: lan_config_result
          when: lan_interface != (current_interfaces.json.lan.if | default(''))
          
    - name: Configure VLANs if enabled
      when: enable_vlans | default(false)
      block:
        - name: Create VLAN interfaces
          uri:
            url: "https://{{ opnsense_host }}/api/interfaces/vlan_settings/addItem"
            method: POST
            user: "{{ api_key }}"
            password: "{{ api_secret }}"
            force_basic_auth: true
            validate_certs: false
            body_format: json
            body:
              vlan:
                if: "{{ lan_interface }}"
                tag: "{{ item.tag }}"
                descr: "{{ item.name }}"
                vlanpcp: ""
            status_code: 200
          loop: "{{ vlans | default([]) }}"
          register: vlan_create_results
          
        - name: Assign VLAN interfaces
          uri:
            url: "https://{{ opnsense_host }}/api/interfaces/settings/set"
            method: POST
            user: "{{ api_key }}"
            password: "{{ api_secret }}"
            force_basic_auth: true
            validate_certs: false
            body_format: json
            body:
              interface:
                "opt{{ loop.index }}":
                  if: "{{ lan_interface }}_vlan{{ item.tag }}"
                  enable: "1"
                  descr: "{{ item.name }}"
                  ipaddr: "{{ item.ip }}"
                  subnet: "{{ item.subnet | default('24') }}"
            status_code: 200
          loop: "{{ vlans | default([]) }}"
          register: vlan_assign_results
          
    - name: Apply configuration changes
      block:
        - name: Reconfigure interfaces
          uri:
            url: "https://{{ opnsense_host }}/api/interfaces/reconfigure"
            method: POST
            user: "{{ api_key }}"
            password: "{{ api_secret }}"
            force_basic_auth: true
            validate_certs: false
            body_format: json
            body: {}
            status_code: 200
          register: reconfigure_result
          
        - name: Wait for interfaces to reconfigure
          pause:
            seconds: 15
            
        - name: Verify interface configuration
          uri:
            url: "https://{{ opnsense_host }}/api/interfaces/overview/get"
            method: GET
            user: "{{ api_key }}"
            password: "{{ api_secret }}"
            force_basic_auth: true
            validate_certs: false
            status_code: 200
          register: final_interfaces
          
        - name: Display final interface configuration
          debug:
            msg:
              - "Interface configuration completed:"
              - "WAN: {{ final_interfaces.json.wan.if | default('Not configured') }} - {{ final_interfaces.json.wan.ipaddr | default('No IP') }}"
              - "LAN: {{ final_interfaces.json.lan.if | default('Not configured') }} - {{ final_interfaces.json.lan.ipaddr | default('No IP') }}"
              
    - name: Save interface mapping
      copy:
        content: |
          # OPNsense Interface Mapping
          # Generated: {{ ansible_date_time.iso8601 }}
          
          WAN_INTERFACE={{ wan_interface }}
          LAN_INTERFACE={{ lan_interface }}
          
          # IP Addresses
          WAN_IP={{ final_interfaces.json.wan.ipaddr | default('DHCP') }}
          LAN_IP={{ final_interfaces.json.lan.ipaddr | default(lan_ip) }}
          
          # VLAN Interfaces
          {% if enable_vlans | default(false) %}
          {% for vlan in vlans | default([]) %}
          VLAN_{{ vlan.tag }}_NAME={{ vlan.name }}
          VLAN_{{ vlan.tag }}_INTERFACE={{ lan_interface }}_vlan{{ vlan.tag }}
          VLAN_{{ vlan.tag }}_IP={{ vlan.ip }}
          {% endfor %}
          {% endif %}
        dest: /opt/privatebox/config/opnsense-interfaces.conf
        mode: '0644'
        
    - name: Display completion information
      debug:
        msg:
          - "=========================================="
          - "Interface Assignment Complete!"
          - "=========================================="
          - ""
          - "Configured Interfaces:"
          - "- WAN: {{ wan_interface }} ({{ final_interfaces.json.wan.ipaddr | default('DHCP') }})"
          - "- LAN: {{ lan_interface }} ({{ final_interfaces.json.lan.ipaddr | default(lan_ip) }})"
          - ""
          - "{% if enable_vlans | default(false) %}VLANs configured:{% for vlan in vlans | default([]) %}"
          - "- {{ vlan.name }} (VLAN {{ vlan.tag }}): {{ vlan.ip }}{% endfor %}{% endif %}"
          - ""
          - "Configuration saved to:"
          - "/opt/privatebox/config/opnsense-interfaces.conf"
          - "=========================================="
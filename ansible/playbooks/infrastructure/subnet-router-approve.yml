---
- name: "Subnet Router 3: Approve Routes"
  hosts: container-host
  become: true
  gather_facts: true

  environment:
    ANSIBLE_JINJA2_NATIVE: "True"

  vars:
    service_name: "headscale"
    subnet_route: "10.10.10.0/24"
    semaphore_url: "http://localhost:3000"
    project_id: 1

    # Template configuration for Semaphore
    template_config:
      semaphore_environment: "SemaphoreAPI"

  tasks:
    - name: Display approval header
      debug:
        msg:
          - "=========================================="
          - "   SUBNET ROUTER ROUTE APPROVAL"
          - "=========================================="
          - "Subnet: {{ subnet_route }}"

    - name: Wait for node to register in Headscale
      command: >
        podman exec {{ service_name }} headscale nodes list -o json
      register: nodes_list
      until: nodes_list.stdout | from_json | length > 0
      retries: 12
      delay: 5
      changed_when: false

    - name: Parse node information
      set_fact:
        subnet_router_node: "{{ nodes_list.stdout | from_json | selectattr('name', 'contains', 'subnet-router') | first | default({}) }}"

    - name: Display node information
      debug:
        msg:
          - "Node found: {{ subnet_router_node.name | default('Not found') }}"
          - "Node ID: {{ subnet_router_node.id | default('N/A') }}"

    - name: Fail if node not found
      fail:
        msg: "Subnet router node not found in Headscale. Check that 'Subnet Router 2: Configure VPN Connection' completed successfully."
      when: subnet_router_node == {}

    - name: List advertised routes
      command: >
        podman exec {{ service_name }} headscale nodes list-routes -o json
      register: routes_list
      changed_when: false

    - name: Check if route is advertised
      set_fact:
        route_advertised: "{{ subnet_route in (routes_list.stdout | from_json | selectattr('id', 'equalto', subnet_router_node.id) | map(attribute='available_routes') | first | default([])) }}"

    - name: Fail if route not advertised
      fail:
        msg: "Route {{ subnet_route }} not advertised by subnet router. Check Tailscale configuration."
      when: not route_advertised

    - name: Approve route (idempotent)
      command: >
        podman exec {{ service_name }} headscale nodes approve-routes --identifier {{ subnet_router_node.id }} --routes {{ subnet_route }}
      changed_when: true
      register: route_approval

    - name: Display approval status
      debug:
        msg: "âœ“ Route {{ subnet_route }} approved for node {{ subnet_router_node.name }}"

    - name: Display final status
      debug:
        msg:
          - "=========================================="
          - "   SUBNET ROUTER DEPLOYMENT COMPLETE"
          - "=========================================="
          - ""
          - "Route Status:"
          - "  Subnet: {{ subnet_route }}"
          - "  Node: {{ subnet_router_node.name }} (ID: {{ subnet_router_node.id }})"
          - "  Status: Approved"
          - ""
          - "VPN Access:"
          - "  VPN clients can now access Trusted LAN (10.10.10.0/24)"
          - "  All traffic routes through subnet router node"
          - ""
          - "Next Steps:"
          - "  1. Create VPN client: podman exec headscale headscale preauthkeys create --user 1"
          - "  2. Connect client: tailscale up --login-server=http://10.10.20.10:8082 --authkey=<KEY>"
          - "  3. Access LAN: ping 10.10.10.1 (from VPN client)"
          - "=========================================="

---
# Infrastructure Validation Tasks
# Verifies that all provisioned resources are functional

- name: Gather Proxmox cluster status
  ansible.builtin.command: pvecm status
  register: cluster_status
  changed_when: false
  failed_when: false

- name: Check VM status
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_validate_certs: "{{ proxmox_api_validate_certs | default(false) }}"
    node: "{{ proxmox_node }}"
    vmid: "{{ item.vmid }}"
    state: current
  loop: "{{ proxmox_vms | default([]) }}"
  register: vm_status
  when: proxmox_vms is defined

- name: Check container status
  community.general.proxmox:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_validate_certs: "{{ proxmox_api_validate_certs | default(false) }}"
    node: "{{ proxmox_node }}"
    vmid: "{{ item.vmid }}"
    state: current
  loop: "{{ proxmox_containers | default([]) }}"
  register: container_status
  when: proxmox_containers is defined

- name: Validate network bridges
  ansible.builtin.shell: |
    ip link show {{ item.name }} | grep -q "state UP"
  loop: "{{ proxmox_bridges | default([]) }}"
  changed_when: false
  failed_when: false
  register: bridge_status

- name: Validate VLAN interfaces
  ansible.builtin.shell: |
    ip link show vlan{{ item.id }} | grep -q "state UP"
  loop: "{{ proxmox_vlans | default([]) }}"
  changed_when: false
  failed_when: false
  register: vlan_status
  when: proxmox_vlans is defined

- name: Check storage availability
  ansible.builtin.command: pvesm status
  register: storage_validation
  changed_when: false

- name: Compile validation results
  ansible.builtin.set_fact:
    infrastructure_validation:
      timestamp: "{{ ansible_date_time.iso8601 }}"
      cluster_healthy: "{{ cluster_status.rc | default(1) == 0 }}"
      vms_running: "{{ vm_status.results | default([]) | selectattr('failed', 'equalto', false) | list | length }}"
      containers_running: "{{ container_status.results | default([]) | selectattr('failed', 'equalto', false) | list | length }}"
      bridges_up: "{{ bridge_status.results | default([]) | selectattr('rc', 'equalto', 0) | list | length }}"
      vlans_up: "{{ vlan_status.results | default([]) | selectattr('rc', 'equalto', 0) | list | length }}"
      storage_available: "{{ storage_validation.stdout_lines | default([]) | length }}"

- name: Display validation summary
  ansible.builtin.debug:
    msg: |
      Infrastructure Validation Summary:
      - Cluster Status: {{ 'Healthy' if infrastructure_validation.cluster_healthy else 'Issues Detected' }}
      - VMs Running: {{ infrastructure_validation.vms_running }}
      - Containers Running: {{ infrastructure_validation.containers_running }}
      - Network Bridges Up: {{ infrastructure_validation.bridges_up }}
      - VLANs Configured: {{ infrastructure_validation.vlans_up }}
      - Storage Pools Available: {{ infrastructure_validation.storage_available }}

- name: Fail if critical infrastructure is missing
  ansible.builtin.fail:
    msg: "Infrastructure validation failed. Please check the summary above."
  when: 
    - fail_on_validation_errors | default(false)
    - not infrastructure_validation.cluster_healthy or infrastructure_validation.storage_available == 0
---
# Rolling update orchestration playbook
# Updates services with minimal downtime

- name: Rolling Update - Pre-flight checks
  hosts: all
  gather_facts: true
  tasks:
    - name: Check system health
      ansible.builtin.command: systemctl is-system-running
      register: system_status
      changed_when: false
      failed_when: false

    - name: Display system status
      ansible.builtin.debug:
        msg: "System {{ inventory_hostname }} status: {{ system_status.stdout }}"

    - name: Create pre-update snapshot
      ansible.builtin.set_fact:
        update_timestamp: "{{ ansible_date_time.epoch }}"
      run_once: true

- name: Rolling Update - Network Services
  hosts: network_services
  serial: 1
  max_fail_percentage: 0
  tasks:
    - name: Update network services
      ansible.builtin.include_role:
        name: "{{ item }}"
      loop:
        - common
        - adguard_home
        - unbound_dns
      tags: network_update

    - name: Verify DNS resolution
      ansible.builtin.command: dig @{{ ansible_host }} privatebox.local
      delegate_to: localhost
      register: dns_check
      failed_when: dns_check.rc != 0

- name: Rolling Update - Management Services
  hosts: management_services
  serial: 1
  tasks:
    - name: Update management services
      ansible.builtin.include_role:
        name: "{{ item }}"
      loop:
        - common
        - portainer
        - semaphore
      tags: management_update

    - name: Health check management services
      ansible.builtin.uri:
        url: "http://{{ ansible_host }}:{{ item.port }}{{ item.path }}"
        method: GET
        status_code: 200
      loop:
        - { port: "{{ portainer_web_port }}", path: "/api/status" }
        - { port: "{{ semaphore_web_port }}", path: "/api/ping" }
      delegate_to: localhost

- name: Rolling Update - Privacy Services
  hosts: privacy_services
  serial: 1
  tasks:
    - name: Update privacy services
      ansible.builtin.include_role:
        name: common
      tags: privacy_update

- name: Rolling Update - Post-update validation
  hosts: all
  tasks:
    - name: Run validation playbook
      ansible.builtin.import_playbook: ../validate_deployment.yml

    - name: Update summary
      ansible.builtin.debug:
        msg: |
          Rolling Update Complete
          ======================
          Start Time: {{ hostvars['localhost']['update_timestamp'] | default('unknown') }}
          End Time: {{ ansible_date_time.epoch }}
          Updated Hosts: {{ ansible_play_hosts | length }}
      run_once: true
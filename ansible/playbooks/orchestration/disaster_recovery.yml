---
# Disaster recovery orchestration playbook
# Restores services from backups

- name: Disaster Recovery - Assessment
  hosts: all
  gather_facts: true
  tasks:
    - name: Check host availability
      ansible.builtin.ping:
      register: host_status

    - name: Identify failed services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
      loop:
        - docker
        - systemd-networkd
      register: service_status
      failed_when: false

    - name: Generate recovery report
      ansible.builtin.set_fact:
        recovery_needed: "{{ service_status.results | selectattr('failed', 'equalto', true) | list | length > 0 }}"

- name: Disaster Recovery - Backup Discovery
  hosts: localhost
  tasks:
    - name: Find available backups
      ansible.builtin.find:
        paths: "{{ backup_location }}"
        patterns: "*-backup-*.tar.gz"
        age: "-{{ backup_retention_days }}d"
      register: available_backups

    - name: Display available backups
      ansible.builtin.debug:
        msg: |
          Available Backups:
          {% for backup in available_backups.files %}
          - {{ backup.path | basename }} ({{ backup.size | human_readable }})
          {% endfor %}

- name: Disaster Recovery - Service Restoration
  hosts: all
  tasks:
    - name: Stop all containers
      community.docker.docker_container:
        name: "{{ item }}"
        state: stopped
      loop:
        - portainer
        - semaphore
        - adguard
        - unbound
      failed_when: false
      when: recovery_needed | default(false)

    - name: Restore service data
      ansible.builtin.unarchive:
        src: "{{ backup_location }}/{{ service_name }}-backup-latest.tar.gz"
        dest: "/"
        remote_src: true
      when: recovery_needed | default(false)
      tags: restore

    - name: Restart services
      ansible.builtin.include_role:
        name: "{{ item }}"
        tasks_from: deploy
      loop:
        - portainer
        - semaphore
        - adguard_home
        - unbound_dns
      when: recovery_needed | default(false)

- name: Disaster Recovery - Validation
  hosts: all
  tasks:
    - name: Validate service health
      ansible.builtin.import_playbook: ../validate_deployment.yml

    - name: Recovery summary
      ansible.builtin.debug:
        msg: |
          Disaster Recovery Status
          =======================
          Recovery Executed: {{ recovery_needed | default(false) }}
          Restored Services: {{ restored_services | default([]) | length }}
          
          Service Status:
          - Portainer: {{ portainer_status | default('unknown') }}
          - Semaphore: {{ semaphore_status | default('unknown') }}
          - AdGuard: {{ adguard_status | default('unknown') }}
          - Unbound: {{ unbound_status | default('unknown') }}
      run_once: true
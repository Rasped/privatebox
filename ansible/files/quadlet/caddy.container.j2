[Unit]
Description=Caddy - Fast and automatic HTTPS reverse proxy
Documentation=https://caddyserver.com/docs/
Wants=network-online.target
After=network-online.target
{% if use_system_quadlet | default(true) %}
Before=multi-user.target
{% endif %}

[Container]
# Container image
Image={{ container_image_registry | default('docker.io') }}/{{ caddy_image }}:{{ caddy_version }}
ContainerName=caddy

# Network configuration
PublishPort={{ caddy_http_port }}:80
PublishPort={{ caddy_https_port }}:443

# Volume mounts
Volume={{ caddy_config_dir }}/Caddyfile:/etc/caddy/Caddyfile:ro,{{ volume_mount_options | default('Z') }}
Volume={{ caddy_data_dir }}:/data:{{ volume_mount_options | default('Z') }}
Volume={{ caddy_config_dir }}:/config:{{ volume_mount_options | default('Z') }}
# Create log directory for access logs
Volume={{ caddy_data_dir }}/logs:/var/log/caddy:{{ volume_mount_options | default('Z') }}

# Environment variables
Environment="TZ={{ timezone | default('UTC') }}"

# Security settings
# Caddy drops privileges automatically, so we run as root initially
SecurityLabelDisable={{ container_security_label_disable | default('false') | lower }}
NoNewPrivileges={{ container_no_new_privileges | default('true') | lower }}

# Read-only root filesystem with specific write mounts
ReadOnly=true
# Caddy needs to write to these locations
Tmpfs=/tmp:rw,nosuid,nodev,noexec
# The data and config volumes handle persistent storage

# Resource limits
{% if caddy_memory_limit is defined %}
MemoryLimit={{ caddy_memory_limit }}
{% endif %}
{% if caddy_cpu_quota is defined %}
CPUQuota={{ caddy_cpu_quota }}
{% endif %}

# Health check
{% if health_check_enabled | default(true) %}
HealthCmd=/usr/bin/caddy version || exit 1
HealthInterval={{ health_check_interval | default('30s') }}
HealthRetries={{ health_check_retries | default(3) }}
HealthStartPeriod={{ health_check_start_period | default('60s') }}
HealthTimeout={{ health_check_timeout | default('10s') }}
{% endif %}

# Logging
{% if container_log_driver is defined %}
LogDriver={{ container_log_driver }}
{% endif %}

# Pull policy
Pull={{ container_pull_policy | default('missing') }}

# Command - run with the Caddyfile
Exec=caddy run --config /etc/caddy/Caddyfile --adapter caddyfile

[Service]
# Restart policy
Restart={{ container_restart_policy | default('always') }}
RestartSec={{ container_restart_sec | default(30) }}

# Systemd service settings
TimeoutStartSec={{ systemd_timeout_start_sec | default(300) }}
TimeoutStopSec={{ systemd_timeout_stop_sec | default(90) }}

# Pre-start commands
{% if caddy_data_dir is defined %}
ExecStartPre=/bin/mkdir -p {{ caddy_data_dir }}
ExecStartPre=/bin/mkdir -p {{ caddy_data_dir }}/logs
ExecStartPre=/bin/mkdir -p {{ caddy_config_dir }}
{% endif %}

[Install]
# Enable service at boot
WantedBy=multi-user.target default.target
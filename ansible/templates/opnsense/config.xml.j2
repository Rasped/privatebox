<?xml version="1.0"?>
<opnsense>
  <version>{{ opnsense_version | default('24.7') }}</version>
  <lastchange>{{ ansible_date_time.epoch }}</lastchange>
  
  <system>
    <hostname>{{ opnsense_hostname | default('opnsense') }}</hostname>
    <domain>{{ domain_name | default('privatebox.local') }}</domain>
    <timezone>{{ timezone | default('UTC') }}</timezone>
    <dns>
      <servers>{{ dns_servers | default(['1.1.1.1', '8.8.8.8']) | join(',') }}</servers>
      <allowoverride>0</allowoverride>
    </dns>
    <timeservers>{{ ntp_servers | default('0.pool.ntp.org') }}</timeservers>
    <webgui>
      <protocol>https</protocol>
      <port>{{ webgui_port | default('443') }}</port>
      <loginautocomplete>0</loginautocomplete>
      <ssl-certref>{{ webgui_certref | default('') }}</ssl-certref>
    </webgui>
    <ssh>
      <enabled>enabled</enabled>
      <permitrootlogin>yes</permitrootlogin>
      <passwordauth>0</passwordauth>
      <port>{{ ssh_port | default('22') }}</port>
      <authorizedkeys>{{ ssh_authorized_keys | default('') }}</authorizedkeys>
    </ssh>
    <language>{{ language | default('en_US') }}</language>
    <serialspeed>{{ serial_speed | default('115200') }}</serialspeed>
    <primaryconsole>serial</primaryconsole>
    <sysctl>
      <item>
        <tuneable>net.pf.request_maxcount</tuneable>
        <value>100000</value>
        <descr>Maximum number of concurrent state table entries</descr>
      </item>
    </sysctl>
  </system>
  
  <interfaces>
    <wan>
      <enable>1</enable>
      <if>{{ wan_interface | default('vtnet0') }}</if>
      <descr>WAN</descr>
      {% if wan_ip is defined and wan_ip != 'dhcp' %}
      <ipaddr>{{ wan_ip }}</ipaddr>
      <subnet>{{ wan_subnet | default('24') }}</subnet>
      <gateway>{{ wan_gateway | default('') }}</gateway>
      {% else %}
      <ipaddr>dhcp</ipaddr>
      {% endif %}
      <blockpriv>1</blockpriv>
      <blockbogons>1</blockbogons>
    </wan>
    
    <!-- Management VLAN (10) -->
    <lan>
      <enable>1</enable>
      <if>{{ lan_interface | default('vtnet1') }}_vlan{{ management_vlan.tag }}</if>
      <descr>{{ management_vlan.name }}</descr>
      <ipaddr>{{ management_vlan.ip }}</ipaddr>
      <subnet>{{ management_vlan.subnet | default('24') }}</subnet>
      <vlanif>{{ lan_interface | default('vtnet1') }}</vlanif>
      <vlantag>{{ management_vlan.tag }}</vlantag>
    </lan>
    
    <!-- Services VLAN (20) -->
    <opt1>
      <enable>1</enable>
      <if>{{ lan_interface | default('vtnet1') }}_vlan{{ services_vlan.tag }}</if>
      <descr>{{ services_vlan.name }}</descr>
      <ipaddr>{{ services_vlan.ip }}</ipaddr>
      <subnet>{{ services_vlan.subnet | default('24') }}</subnet>
      <vlanif>{{ lan_interface | default('vtnet1') }}</vlanif>
      <vlantag>{{ services_vlan.tag }}</vlantag>
    </opt1>
    
    <!-- LAN VLAN (30) -->
    <opt2>
      <enable>1</enable>
      <if>{{ lan_interface | default('vtnet1') }}_vlan{{ lan_vlan.tag }}</if>
      <descr>{{ lan_vlan.name }}</descr>
      <ipaddr>{{ lan_vlan.ip }}</ipaddr>
      <subnet>{{ lan_vlan.subnet | default('24') }}</subnet>
      <vlanif>{{ lan_interface | default('vtnet1') }}</vlanif>
      <vlantag>{{ lan_vlan.tag }}</vlantag>
    </opt2>
    
    <!-- IoT VLAN (40) -->
    <opt3>
      <enable>1</enable>
      <if>{{ lan_interface | default('vtnet1') }}_vlan{{ iot_vlan.tag }}</if>
      <descr>{{ iot_vlan.name }}</descr>
      <ipaddr>{{ iot_vlan.ip }}</ipaddr>
      <subnet>{{ iot_vlan.subnet | default('24') }}</subnet>
      <vlanif>{{ lan_interface | default('vtnet1') }}</vlanif>
      <vlantag>{{ iot_vlan.tag }}</vlantag>
    </opt3>
  </interfaces>
  
  <vlans>
    <!-- Management VLAN -->
    <vlan>
      <if>{{ lan_interface | default('vtnet1') }}</if>
      <tag>{{ management_vlan.tag }}</tag>
      <descr>{{ management_vlan.name }}</descr>
      <vlanif>{{ lan_interface | default('vtnet1') }}_vlan{{ management_vlan.tag }}</vlanif>
    </vlan>
    
    <!-- Services VLAN -->
    <vlan>
      <if>{{ lan_interface | default('vtnet1') }}</if>
      <tag>{{ services_vlan.tag }}</tag>
      <descr>{{ services_vlan.name }}</descr>
      <vlanif>{{ lan_interface | default('vtnet1') }}_vlan{{ services_vlan.tag }}</vlanif>
    </vlan>
    
    <!-- LAN VLAN -->
    <vlan>
      <if>{{ lan_interface | default('vtnet1') }}</if>
      <tag>{{ lan_vlan.tag }}</tag>
      <descr>{{ lan_vlan.name }}</descr>
      <vlanif>{{ lan_interface | default('vtnet1') }}_vlan{{ lan_vlan.tag }}</vlanif>
    </vlan>
    
    <!-- IoT VLAN -->
    <vlan>
      <if>{{ lan_interface | default('vtnet1') }}</if>
      <tag>{{ iot_vlan.tag }}</tag>
      <descr>{{ iot_vlan.name }}</descr>
      <vlanif>{{ lan_interface | default('vtnet1') }}_vlan{{ iot_vlan.tag }}</vlanif>
    </vlan>
  </vlans>
  
  <dhcpd>
    <!-- Management VLAN - No DHCP (static IPs only) -->
    <lan>
      <enable>0</enable>
    </lan>
    
    <!-- Services VLAN - No DHCP (static IPs only) -->
    <opt1>
      <enable>0</enable>
    </opt1>
    
    <!-- LAN VLAN - DHCP enabled -->
    <opt2>
      <enable>1</enable>
      <range>
        <from>{{ lan_vlan.dhcp_start | default('10.0.30.100') }}</from>
        <to>{{ lan_vlan.dhcp_end | default('10.0.30.200') }}</to>
      </range>
      <defaultleasetime>7200</defaultleasetime>
      <maxleasetime>86400</maxleasetime>
      <netmask>{{ lan_vlan.subnet | default('24') }}</netmask>
      <gateway>{{ lan_vlan.ip }}</gateway>
      <domain>{{ domain_name | default('privatebox.local') }}</domain>
      <dnsserver>{{ services_vlan.adguard_ip | default('10.0.20.21') }}</dnsserver>
      <ntpserver>{{ lan_vlan.ip }}</ntpserver>
    </opt2>
    
    <!-- IoT VLAN - DHCP enabled -->
    <opt3>
      <enable>1</enable>
      <range>
        <from>{{ iot_vlan.dhcp_start | default('10.0.40.100') }}</from>
        <to>{{ iot_vlan.dhcp_end | default('10.0.40.200') }}</to>
      </range>
      <defaultleasetime>7200</defaultleasetime>
      <maxleasetime>86400</maxleasetime>
      <netmask>{{ iot_vlan.subnet | default('24') }}</netmask>
      <gateway>{{ iot_vlan.ip }}</gateway>
      <domain>{{ domain_name | default('privatebox.local') }}</domain>
      <dnsserver>{{ services_vlan.adguard_ip | default('10.0.20.21') }}</dnsserver>
      <ntpserver>{{ iot_vlan.ip }}</ntpserver>
    </opt3>
  </dhcpd>
  
  <pptpd>
    <mode>off</mode>
  </pptpd>
  
  <dnsmasq>
    <enable>0</enable>
  </dnsmasq>
  
  <unbound>
    <enable>1</enable>
    <dnssec>1</dnssec>
    <port>53</port>
    <dnshapermode>dnsreplyoverride</dnshapermode>
    <active_interface>all</active_interface>
    <outgoing_interface>all</outgoing_interface>
    <custom_options></custom_options>
    <!-- Forward all DNS queries to AdGuard Home in Services VLAN -->
    <forwarding>
      <domain>*</domain>
      <ip>{{ services_vlan.adguard_ip | default('10.0.20.21') }}</ip>
      <port>53</port>
    </forwarding>
  </unbound>
  
  <snmpd>
    <syslocation></syslocation>
    <syscontact></syscontact>
    <enable>0</enable>
  </snmpd>
  
  <nat>
    <outbound>
      <mode>automatic</mode>
    </outbound>
  </nat>
  
  <filter>
    <!-- Rate Limiting Rules -->
    <rule>
      <type>pass</type>
      <interface>all</interface>
      <source>
        <any/>
      </source>
      <destination>
        <any/>
        <port>53</port>
      </destination>
      <protocol>tcp/udp</protocol>
      <max-src-conn-rate>{{ rate_limits.dns.rate | regex_replace('(\d+)/.*', '\1') }}/{{ rate_limits.dns.rate | regex_replace('\d+/(.*)', '\1') }}</max-src-conn-rate>
      <max-src-conn-burst>{{ rate_limits.dns.burst }}</max-src-conn-burst>
      <descr>001-RATE-LIMIT-DNS: DNS rate limiting {{ rate_limits.dns.rate }}</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>all</interface>
      <source>
        <any/>
      </source>
      <destination>
        <any/>
        <port>{{ ssh_port | default('22') }}</port>
      </destination>
      <protocol>tcp</protocol>
      <max-src-conn-rate>{{ rate_limits.ssh.rate | regex_replace('(\d+)/.*', '\1') }}/{{ rate_limits.ssh.rate | regex_replace('\d+/(.*)', '\1') }}</max-src-conn-rate>
      <max-src-conn-burst>{{ rate_limits.ssh.burst }}</max-src-conn-burst>
      <descr>002-RATE-LIMIT-SSH: SSH rate limiting {{ rate_limits.ssh.rate }}</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>all</interface>
      <source>
        <any/>
      </source>
      <destination>
        <any/>
        <port>443</port>
      </destination>
      <protocol>tcp</protocol>
      <max-src-conn-rate>{{ rate_limits.https.rate | regex_replace('(\d+)/.*', '\1') }}/{{ rate_limits.https.rate | regex_replace('\d+/(.*)', '\1') }}</max-src-conn-rate>
      <max-src-conn-burst>{{ rate_limits.https.burst }}</max-src-conn-burst>
      <descr>003-RATE-LIMIT-HTTPS: HTTPS rate limiting {{ rate_limits.https.rate }}</descr>
    </rule>
    
    <!-- Management VLAN Rules -->
    <rule>
      <type>pass</type>
      <interface>lan</interface>
      <source>
        <network>lan</network>
      </source>
      <destination>
        <any/>
      </destination>
      <descr>100-MGMT-ANY-ANY-ALLOW: Management has full access</descr>
    </rule>
    
    <!-- Services VLAN Rules -->
    <rule>
      <type>pass</type>
      <interface>opt1</interface>
      <source>
        <network>opt1</network>
      </source>
      <destination>
        <not>
          <network>RFC1918</network>
        </not>
      </destination>
      <protocol>tcp</protocol>
      <destination>
        <port>443</port>
      </destination>
      <descr>200-SVC-INTERNET-HTTPS-ALLOW: Services to Internet HTTPS</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt1</interface>
      <source>
        <network>opt1</network>
      </source>
      <destination>
        <not>
          <network>RFC1918</network>
        </not>
      </destination>
      <protocol>tcp</protocol>
      <destination>
        <port>80</port>
      </destination>
      <descr>201-SVC-INTERNET-HTTP-ALLOW: Services to Internet HTTP</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt1</interface>
      <source>
        <network>opt1</network>
      </source>
      <destination>
        <not>
          <network>RFC1918</network>
        </not>
      </destination>
      <protocol>tcp</protocol>
      <destination>
        <port>853</port>
      </destination>
      <descr>202-SVC-INTERNET-DNS-ALLOW: DNS over TLS</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt1</interface>
      <source>
        <network>opt1</network>
      </source>
      <destination>
        <not>
          <network>RFC1918</network>
        </not>
      </destination>
      <protocol>udp</protocol>
      <destination>
        <port>123</port>
      </destination>
      <descr>203-SVC-INTERNET-NTP-ALLOW: NTP time sync</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt1</interface>
      <source>
        <network>opt1</network>
      </source>
      <destination>
        <not>
          <network>RFC1918</network>
        </not>
      </destination>
      <protocol>icmp</protocol>
      <icmptype>echo-request,echo-reply</icmptype>
      <descr>204-SVC-INTERNET-ICMP-ALLOW: Allow ping to Internet</descr>
    </rule>
    
    <!-- LAN VLAN Rules -->
    <rule>
      <type>pass</type>
      <interface>opt2</interface>
      <source>
        <network>opt2</network>
      </source>
      <destination>
        <address>{{ services_vlan.adguard_ip | default('10.0.20.21') }}</address>
        <port>53</port>
      </destination>
      <protocol>tcp/udp</protocol>
      <descr>300-LAN-SVC-DNS-ALLOW: LAN to AdGuard DNS</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt2</interface>
      <source>
        <network>opt2</network>
      </source>
      <destination>
        <address>{{ services_vlan.adguard_ip | default('10.0.20.21') }}</address>
        <port>8080</port>
      </destination>
      <protocol>tcp</protocol>
      <descr>301-LAN-SVC-WEBUI-ALLOW: LAN to AdGuard WebUI</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt2</interface>
      <source>
        <network>opt2</network>
      </source>
      <destination>
        <address>{{ services_vlan.management_vm_ip | default('10.0.20.21') }}</address>
        <port>9000</port>
      </destination>
      <protocol>tcp</protocol>
      <descr>302-LAN-SVC-PORTAINER-ALLOW: LAN to Portainer</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt2</interface>
      <source>
        <network>opt2</network>
      </source>
      <destination>
        <address>{{ services_vlan.management_vm_ip | default('10.0.20.21') }}</address>
        <port>3000</port>
      </destination>
      <protocol>tcp</protocol>
      <descr>303-LAN-SVC-SEMAPHORE-ALLOW: LAN to Semaphore</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt2</interface>
      <source>
        <network>opt2</network>
      </source>
      <destination>
        <not>
          <network>RFC1918</network>
        </not>
      </destination>
      <descr>310-LAN-INTERNET-ANY-ALLOW: LAN full Internet access</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt2</interface>
      <source>
        <network>opt2</network>
      </source>
      <destination>
        <network>opt1</network>
      </destination>
      <protocol>icmp</protocol>
      <icmptype>echo-request,echo-reply</icmptype>
      <descr>311-LAN-SVC-ICMP-ALLOW: Allow LAN to ping Services</descr>
    </rule>
    
    <!-- IoT VLAN Rules -->
    <rule>
      <type>pass</type>
      <interface>opt3</interface>
      <source>
        <network>opt3</network>
      </source>
      <destination>
        <address>{{ services_vlan.adguard_ip | default('10.0.20.21') }}</address>
        <port>53</port>
      </destination>
      <protocol>tcp/udp</protocol>
      <descr>400-IOT-SVC-DNS-ALLOW: IoT to AdGuard DNS</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt3</interface>
      <source>
        <network>opt3</network>
      </source>
      <destination>
        <not>
          <network>RFC1918</network>
        </not>
      </destination>
      <protocol>tcp</protocol>
      <destination>
        <port>80</port>
      </destination>
      <descr>401-IOT-INTERNET-HTTP-ALLOW: IoT HTTP updates</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt3</interface>
      <source>
        <network>opt3</network>
      </source>
      <destination>
        <not>
          <network>RFC1918</network>
        </not>
      </destination>
      <protocol>tcp</protocol>
      <destination>
        <port>443</port>
      </destination>
      <descr>402-IOT-INTERNET-HTTPS-ALLOW: IoT HTTPS</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt3</interface>
      <source>
        <network>opt3</network>
      </source>
      <destination>
        <not>
          <network>RFC1918</network>
        </not>
      </destination>
      <protocol>udp</protocol>
      <destination>
        <port>123</port>
      </destination>
      <descr>403-IOT-INTERNET-NTP-ALLOW: IoT NTP time sync</descr>
    </rule>
    <rule>
      <type>pass</type>
      <interface>opt3</interface>
      <source>
        <network>opt3</network>
      </source>
      <destination>
        <not>
          <network>RFC1918</network>
        </not>
      </destination>
      <protocol>tcp</protocol>
      <destination>
        <port>8883</port>
      </destination>
      <descr>404-IOT-INTERNET-MQTT-ALLOW: IoT MQTT over TLS</descr>
    </rule>
    
    <!-- Explicit deny rules for Services VLAN -->
    <rule>
      <type>block</type>
      <interface>opt1</interface>
      <source>
        <network>opt1</network>
      </source>
      <destination>
        <network>lan</network>
      </destination>
      <descr>210-SVC-MGMT-DENY: Block Services to Management</descr>
    </rule>
    <rule>
      <type>block</type>
      <interface>opt1</interface>
      <source>
        <network>opt1</network>
      </source>
      <destination>
        <network>opt2</network>
      </destination>
      <descr>220-SVC-LAN-DENY: Block Services to LAN</descr>
    </rule>
    <rule>
      <type>block</type>
      <interface>opt1</interface>
      <source>
        <network>opt1</network>
      </source>
      <destination>
        <network>opt3</network>
      </destination>
      <descr>230-SVC-IOT-DENY: Block Services to IoT</descr>
    </rule>
    
    <!-- Explicit deny rules for LAN VLAN -->
    <rule>
      <type>block</type>
      <interface>opt2</interface>
      <source>
        <network>opt2</network>
      </source>
      <destination>
        <network>lan</network>
      </destination>
      <descr>320-LAN-MGMT-DENY: Block LAN to Management</descr>
    </rule>
    <rule>
      <type>block</type>
      <interface>opt2</interface>
      <source>
        <network>opt2</network>
      </source>
      <destination>
        <network>opt1</network>
      </destination>
      <descr>330-LAN-SVC-DENY: Block LAN to Services (except allowed)</descr>
    </rule>
    <rule>
      <type>block</type>
      <interface>opt2</interface>
      <source>
        <network>opt2</network>
      </source>
      <destination>
        <network>opt3</network>
      </destination>
      <descr>340-LAN-IOT-DENY: Block LAN to IoT</descr>
    </rule>
    
    <!-- Explicit deny rules for IoT VLAN -->
    <rule>
      <type>block</type>
      <interface>opt3</interface>
      <source>
        <network>opt3</network>
      </source>
      <destination>
        <network>lan</network>
      </destination>
      <descr>410-IOT-MGMT-DENY: Block IoT to Management</descr>
    </rule>
    <rule>
      <type>block</type>
      <interface>opt3</interface>
      <source>
        <network>opt3</network>
      </source>
      <destination>
        <network>opt1</network>
      </destination>
      <descr>420-IOT-SVC-DENY: Block IoT to Services (except allowed)</descr>
    </rule>
    <rule>
      <type>block</type>
      <interface>opt3</interface>
      <source>
        <network>opt3</network>
      </source>
      <destination>
        <network>opt2</network>
      </destination>
      <descr>430-IOT-LAN-DENY: Block IoT to LAN</descr>
    </rule>
    
    <!-- Default deny rule for all other traffic -->
    <rule>
      <type>block</type>
      <interface>all</interface>
      <source>
        <any/>
      </source>
      <destination>
        <any/>
      </destination>
      <descr>999-DEFAULT-DENY: Block all unmatched traffic</descr>
    </rule>
  </filter>
  
  <rrd>
    <enable>1</enable>
  </rrd>
  
  <syslog>
    <enable>1</enable>
  </syslog>
  
  <powerd>
    <ac_mode>hadp</ac_mode>
    <battery_mode>hadp</battery_mode>
  </powerd>
  
  <api>
    <backup>
      <enabled>1</enabled>
    </backup>
  </api>
  
  <gateways>
    <gateway_item>
      <interface>wan</interface>
      <gateway>{{ wan_gateway | default('dynamic') }}</gateway>
      <name>WAN_DHCP</name>
      <weight>1</weight>
      <monitor>{{ wan_monitor_ip | default('1.1.1.1') }}</monitor>
      <descr>WAN Gateway</descr>
      <defaultgw>1</defaultgw>
    </gateway_item>
  </gateways>
  
  <aliases>
    <!-- Network Aliases -->
    <alias>
      <name>RFC1918</name>
      <type>network</type>
      <content>10.0.0.0/8,172.16.0.0/12,192.168.0.0/16</content>
      <descr>Private IP ranges</descr>
    </alias>
    <alias>
      <name>MGMT_net</name>
      <type>network</type>
      <content>{{ management_vlan.network | default('10.0.10.0/24') }}</content>
      <descr>Management VLAN</descr>
    </alias>
    <alias>
      <name>SVC_net</name>
      <type>network</type>
      <content>{{ services_vlan.network | default('10.0.20.0/24') }}</content>
      <descr>Services VLAN</descr>
    </alias>
    <alias>
      <name>LAN_net</name>
      <type>network</type>
      <content>{{ lan_vlan.network | default('10.0.30.0/24') }}</content>
      <descr>LAN VLAN</descr>
    </alias>
    <alias>
      <name>IOT_net</name>
      <type>network</type>
      <content>{{ iot_vlan.network | default('10.0.40.0/24') }}</content>
      <descr>IoT VLAN</descr>
    </alias>
  </aliases>
  
  <ca></ca>
  <cert></cert>
  
  <pppoe></pppoe>
  <ppps></ppps>
  
  <shaper></shaper>
  <installedpackages></installedpackages>
  
  <widgets>
    <sequence>system_information-container:00000000-col3:show,services_status-container:00000001-col4:show,gateways-container:00000002-col4:show,interface_list-container:00000003-col4:show</sequence>
  </widgets>
</opnsense>
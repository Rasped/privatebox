#!/bin/sh
# FreeBSD {{ freebsd_version }} Post-installation script
# Generated by PrivateBox automation

echo "Starting FreeBSD post-installation customization..."

# Update package repository
pkg update -f

# Install additional packages if specified
{% if freebsd_additional_packages is defined and freebsd_additional_packages | length > 0 %}
echo "Installing additional packages: {{ freebsd_additional_packages | join(' ') }}"
pkg install -y {{ freebsd_additional_packages | join(' ') }}
{% endif %}

# Configure additional services
{% if freebsd_additional_services is defined %}
{% for service, enabled in freebsd_additional_services.items() %}
{% if enabled %}
sysrc {{ service }}_enable="YES"
{% else %}
sysrc {{ service }}_enable="NO"
{% endif %}
{% endfor %}
{% endif %}

# Security hardening
{% if freebsd_security_hardening | default(true) %}
echo "Applying security hardening..."

# Disable unnecessary services
sysrc sendmail_enable="NO"
sysrc sendmail_submit_enable="NO" 
sysrc sendmail_outbound_enable="NO"
sysrc sendmail_msp_queue_enable="NO"

# Enable security features in rc.conf
sysrc clear_tmp_enable="YES"
sysrc icmp_drop_redirect="YES"
sysrc icmp_log_redirect="YES"
sysrc log_in_vain="YES"

# Kernel security settings
echo "# Security settings" >> /etc/sysctl.conf
echo "security.bsd.see_other_uids=0" >> /etc/sysctl.conf
echo "security.bsd.see_other_gids=0" >> /etc/sysctl.conf
echo "security.bsd.unprivileged_read_msgbuf=0" >> /etc/sysctl.conf
echo "security.bsd.unprivileged_proc_debug=0" >> /etc/sysctl.conf
echo "net.inet.tcp.blackhole=2" >> /etc/sysctl.conf
echo "net.inet.udp.blackhole=1" >> /etc/sysctl.conf
echo "net.inet.ip.redirect=0" >> /etc/sysctl.conf
echo "net.inet.tcp.drop_synfin=1" >> /etc/sysctl.conf
{% endif %}

# Configure SSH security
{% if freebsd_ssh_security | default(true) %}
echo "Configuring SSH security..."
cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak

# Basic SSH hardening
sed -i '' 's/#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
sed -i '' 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
sed -i '' 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config

# Additional SSH settings
echo "MaxAuthTries 3" >> /etc/ssh/sshd_config
echo "ClientAliveInterval 300" >> /etc/ssh/sshd_config
echo "ClientAliveCountMax 2" >> /etc/ssh/sshd_config
{% endif %}

# Configure firewall if requested
{% if freebsd_enable_firewall | default(false) %}
echo "Enabling and configuring firewall..."
sysrc firewall_enable="YES"
sysrc firewall_type="{{ freebsd_firewall_type | default('simple') }}"
{% if freebsd_firewall_type == "simple" %}
sysrc firewall_myservices="{{ freebsd_firewall_services | default('ssh') }}"
sysrc firewall_allowservices="{{ freebsd_firewall_allowed_ips | default('any') }}"
{% endif %}
{% endif %}

# Create custom scripts or configurations
{% if freebsd_custom_configs is defined %}
{% for config in freebsd_custom_configs %}
echo "Creating custom config: {{ config.path }}"
cat > "{{ config.path }}" << 'CUSTOM_CONFIG_EOF'
{{ config.content }}
CUSTOM_CONFIG_EOF
{% if config.mode is defined %}
chmod {{ config.mode }} "{{ config.path }}"
{% endif %}
{% if config.owner is defined %}
chown {{ config.owner }} "{{ config.path }}"
{% endif %}
{% endfor %}
{% endif %}

# Set up automatic updates if requested
{% if freebsd_auto_updates | default(false) %}
echo "Configuring automatic security updates..."
pkg install -y freebsd-update

# Configure periodic security updates
echo "# Enable security updates" >> /etc/periodic.conf
echo "daily_status_security_enable=\"YES\"" >> /etc/periodic.conf
echo "weekly_status_security_enable=\"YES\"" >> /etc/periodic.conf

# Configure freebsd-update
echo "# Auto-update configuration" >> /etc/freebsd-update.conf
echo "BackupKernel no" >> /etc/freebsd-update.conf
echo "StrictComponents yes" >> /etc/freebsd-update.conf
{% endif %}

# Performance tuning
{% if freebsd_performance_tuning | default(false) %}
echo "Applying performance tuning..."

# Loader tuning
cat >> /boot/loader.conf << 'LOADER_EOF'
# Performance tuning
kern.ipc.shmseg=1024
kern.ipc.shmmni=1024
kern.maxproc=10000
kern.maxfiles=65536
net.inet.tcp.sendspace=65536
net.inet.tcp.recvspace=65536
LOADER_EOF

# Sysctl tuning
cat >> /etc/sysctl.conf << 'SYSCTL_EOF'
# Performance tuning
kern.maxfiles=65536
kern.maxfilesperproc=32768
net.inet.tcp.sendspace=65536
net.inet.tcp.recvspace=65536
SYSCTL_EOF
{% endif %}

# Custom post-installation scripts
{% if freebsd_custom_scripts is defined %}
{% for script in freebsd_custom_scripts %}
echo "Running custom script: {{ script.name | default('unnamed') }}"
{{ script.content }}
{% endfor %}
{% endif %}

# Create installation info file
cat > /tmp/freebsd-install-info.txt << 'INFO_EOF'
FreeBSD {{ freebsd_version }} Post-Installation Complete
=====================================================
Completed: $(date)
Hostname: {{ freebsd_hostname | default('freebsd-vm') }}
User: {{ freebsd_username }}
Network: {{ vm_static_ip | default('DHCP') }}

Installed Packages:
$(pkg info)

Services:
$(service -e)

System Information:
$(uname -a)
$(dmesg | tail -10)
INFO_EOF

# Log completion
logger "FreeBSD post-installation script completed successfully"
echo "FreeBSD post-installation customization completed at $(date)"

# Optional reboot after post-install
{% if freebsd_reboot_after_postinstall | default(false) %}
echo "Rebooting system after post-installation..."
shutdown -r +1 "System will reboot in 1 minute after post-installation"
{% endif %}

exit 0